"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[5186],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,y=u["".concat(i,".").concat(m)]||u[m]||d[m]||c;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,o=new Array(c);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<c;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6605:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const c={},o="Creating a Rust interactor",s={unversionedId:"Practical Sessions/Smart Contracts/rust_interactors",id:"Practical Sessions/Smart Contracts/rust_interactors",title:"Creating a Rust interactor",description:"Rust interactors are used to interact with the blockchain via Rust.",source:"@site/docs/Practical Sessions/Smart Contracts/rust_interactors.md",sourceDirName:"Practical Sessions/Smart Contracts",slug:"/Practical Sessions/Smart Contracts/rust_interactors",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/rust_interactors",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"The Empty SC",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/empty"},next:{title:"The Adder SC",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/adder"}},i={},l=[{value:"Practice",id:"practice",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(u,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"creating-a-rust-interactor"},"Creating a Rust interactor"),(0,a.yg)("p",null,"Rust interactors are used to interact with the blockchain via Rust."),(0,a.yg)("p",null,"Let's do this for the empty SC:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"sc-meta all snippets\n /Users/costincarabas/mvx/mx-contracts-rs/contracts/empty\n\nFound 1 contract crates.\n\n(1/1)\nIn /Users/costincarabas/mvx/mx-contracts-rs/contracts/empty/meta\nCalling `cargo run snippets`\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.16s\n     Running `/Users/costincarabas/mvx/mx-contracts-rs/target/debug/empty-meta snippets`\n")),(0,a.yg)("p",null,"A new folder ",(0,a.yg)("inlineCode",{parentName:"p"},"interactor")," was created.\nThis will generate code for all the endpoints and view functions you created."),(0,a.yg)("p",null,"As this is a new and separate Rust binary, you must add it to the main ",(0,a.yg)("inlineCode",{parentName:"p"},"Cargo.toml"),"'s members:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-toml"},'members = [\n[...]\n  "contracts/empty/interactor",\n[...]\n]\n')),(0,a.yg)("p",null,"Now you can use it:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"$ cargo run deploy\n[...]\nsender's recalled nonce: 10595\n-- tx nonce: 10595\nsc deploy tx hash: a17a4f51305b6f6dd9c01ec4986d0f90266ef560599b15af613e9aadd816e705\ndeploy address: erd1qqqqqqqqqqqqqpgqchszakc8fm44c2rndjh09xeuh829g4tgd8sskk0m5e\n")),(0,a.yg)("h2",{id:"practice"},"Practice"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Create an interactor for you Empty contract.")))}d.isMDXComponent=!0}}]);
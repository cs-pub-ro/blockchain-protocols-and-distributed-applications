"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[371],{2205:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>b,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=t(8168),o=(t(6540),t(5680));const s={},a="Blockchain Observers",i={unversionedId:"Practical Sessions/Explorer/Blockchain Observers/observers",id:"Practical Sessions/Explorer/Blockchain Observers/observers",title:"Blockchain Observers",description:"Observers are a type of nodes that don't participate in the consensus but keep a peer-to-peer communication with the rest of the blockchain.",source:"@site/docs/Practical Sessions/Explorer/Blockchain Observers/observers.md",sourceDirName:"Practical Sessions/Explorer/Blockchain Observers",slug:"/Practical Sessions/Explorer/Blockchain Observers/observers",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Blockchain Observers/observers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Blockchain Validators",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Blockchain Validators/validators"},next:{title:"Devnet & Testnet Blockchain",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Devnet Blockchains/devnet_testnet"}},c={},l=[],p={toc:l},u="wrapper";function b(e){let{components:r,...s}=e;return(0,o.yg)(u,(0,n.A)({},p,s,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"blockchain-observers"},"Blockchain Observers"),(0,o.yg)("p",null,"Observers are a type of nodes that ",(0,o.yg)("inlineCode",{parentName:"p"},"don't participate in the consensus")," but keep a peer-to-peer communication with the rest of the blockchain.\nThey are usually used to see the communication between nodes (ex: debugging). "),(0,o.yg)("p",null,"Let's filter the nodes to see only the observers. There is an ",(0,o.yg)("a",{parentName:"p",href:"https://explorer.multiversx.com/nodes?type=observer"},"Observers")," tab below the ",(0,o.yg)("inlineCode",{parentName:"p"},"Nodes")," section."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Observers",src:t(3217).A,width:"1279",height:"755"})),(0,o.yg)("p",null,"We can observer the same fields as the nodes, but there is no ",(0,o.yg)("inlineCode",{parentName:"p"},"Rating"),". Why is that?"),(0,o.yg)("p",null,"Note that each Observer is only on a Shard."),(0,o.yg)("p",null,"What should we do if we want to listen to the communication on every shard?"),(0,o.yg)("p",null,"Observer that there are other types of nodes"))}b.isMDXComponent=!0},3217:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/images/observers-b156b494dcfa463df79848f254b5430e.png"},5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>h});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,h=u["".concat(c,".").concat(d)]||u[d]||b[d]||s;return t?n.createElement(h,a(a({ref:r},p),{},{components:t})):n.createElement(h,a({ref:r},p))}));function h(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);
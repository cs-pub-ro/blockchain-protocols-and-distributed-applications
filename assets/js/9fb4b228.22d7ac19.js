"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[5994],{3877:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/teminalp2p-183b8fdb34bb34ed661b958a98236e37.png"},5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>f});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=i,f=d["".concat(c,".").concat(u)]||d[u]||m[u]||a;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7492:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=t(8168),i=(t(6540),t(5680));const a={},o="The terminal",l={unversionedId:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/terminal",id:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/terminal",title:"The terminal",description:"This terminal will be a way to interact with other nodes.l(\u201ccomplete code will be available on github\u201d)",source:"@site/docs/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/terminal.md",sourceDirName:"Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)",slug:"/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/terminal",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/terminal",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Peer to peer network",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/p2p_network"},next:{title:"Mining a block",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/Basic Peer-to-Peer Blockchain (Extra)/mining"}},c={},s=[],p={toc:s},d="wrapper";function m(e){let{components:n,...a}=e;return(0,i.yg)(d,(0,r.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"the-terminal"},"The terminal"),(0,i.yg)("p",null,"This terminal will be a way to interact with other nodes.l(\u201ccomplete code will be available on github\u201d)"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'func TerminalView(node host.Host) {\n //print a menu with 8 options\n //1. Create a new wallet\n //2. View your wallet\n //3. Send coins\n //4. View your transactions\n //5. Mine\n //6. Options\n //7. Exit\n\n theEntireMenu()\n\n //read data from keyboard\n reader := bufio.NewReader(os.Stdin)\n fmt.Print(">")\n text, _ := reader.ReadString(\'\\n\')\n fmt.Println(text)\n //remove \\n from text\n text = text[:len(text)-1]\n //verify the input\n switch text {\n case "1":\n  createWallet()\n case "2":\n  viewWallet()\n case "3":\n  sendCoins(node)\n case "4":\n  viewTransactions()\n case "5":\n  mine(node)\n case "6":\n  options()\n case "7":\n  exit()\n case "8":\n  addPeers(node)\n }\n\n}\n\nfunc theEntireMenu() {\n fmt.Println("+--------------------+")\n fmt.Println("|1.)Create new wallet|")\n fmt.Println("+--------------------+")\n fmt.Println("|2.)View your wallet |")\n fmt.Println("+--------------------+")\n fmt.Println("|3).Send coins       |")\n fmt.Println("+--------------------+")\n fmt.Println("|4.)View transactions|")\n fmt.Println("+--------------------+")\n fmt.Println("|5.)Mine             |")\n fmt.Println("+--------------------+")\n fmt.Println("|6.)Options          |")\n fmt.Println("+--------------------+")\n fmt.Println("|7.)Exit             |")\n fmt.Println("+--------------------+")\n fmt.Println("|8.)Add peers        |")\n fmt.Println("+--------------------+")\n}\n')),(0,i.yg)("p",null,"How will look:"),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"Alt text",src:t(3877).A,width:"722",height:"258"})),(0,i.yg)("p",null,"At the top of the terminal, you'll find our P2P address. This address makes it easy to share with other nodes for sending requests."))}m.isMDXComponent=!0}}]);
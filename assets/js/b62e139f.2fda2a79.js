"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[769],{1e3:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/amm-c10f49d70f8d03b426b20c2630c6ed20.png"},1255:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/swap_ash4-ce14f215a5188e8f62cf85268ba9cc19.png"},1405:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/swap_ash1-0e09e8d822927822845c8f9b1cee6c76.png"},2676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const o={},s="Swap tokens on xExchange",i={unversionedId:"Practical Sessions/DeFi/swap",id:"Practical Sessions/DeFi/swap",title:"Swap tokens on xExchange",description:"In this section, you will learn how to swap a token with another on MultiversX. For this, we will use the Devnet xExchange, a MultiversX Decentralized Exchange.",source:"@site/docs/Practical Sessions/DeFi/swap.md",sourceDirName:"Practical Sessions/DeFi",slug:"/Practical Sessions/DeFi/swap",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/DeFi/swap",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Mint tokens",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/DeFi/mint_tokens"},next:{title:"CTF",permalink:"/workshop-blockchain-protocols-and-distributed-applications/Practical Sessions/CTF/"}},l={},c=[{value:"Automated Market Maker (AMM)",id:"automated-market-maker-amm",level:2},{value:"Pair Smart Contract",id:"pair-smart-contract",level:2},{value:"Task",id:"task",level:2}],p={toc:c},g="wrapper";function u(e){let{components:t,...o}=e;return(0,r.yg)(g,(0,a.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"swap-tokens-on-xexchange"},"Swap tokens on xExchange"),(0,r.yg)("p",null,"In this section, you will learn how to swap a token with another on MultiversX. For this, we will use the ",(0,r.yg)("a",{parentName:"p",href:"https://devnet.xexchange.com/"},"Devnet xExchange"),", a MultiversX Decentralized Exchange."),(0,r.yg)("p",null,"Keep in mind that Devnet and Testnet chains are different! First go to ",(0,r.yg)("a",{parentName:"p",href:"https://devnet-wallet.multiversx.com"},"Devnet Wallet")," and use ",(0,r.yg)("strong",{parentName:"p"},"Faucet")," functionality to get xEGLD. "),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"DEX",src:n(3208).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Use ",(0,r.yg)("strong",{parentName:"p"},"Connect")," button and connect with your wallet via your preferred method."),(0,r.yg)("p",null,"Let's perform a swap from EGLD to ASH."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"SwapASH",src:n(1405).A,width:"2970",height:"1506"}),"\nNotice that for 1 EGLD, we would get ",(0,r.yg)("strong",{parentName:"p"},"212 ASH")," tokens."),(0,r.yg)("p",null,"Let's try to swap more:\n",(0,r.yg)("img",{alt:"SwapASH",src:n(3953).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Notice that for 10 EGLD, we would get 1498 ASH tokens.\nThat's ",(0,r.yg)("strong",{parentName:"p"},"149.8 ASH")," tokens for 1 EGLD."),(0,r.yg)("p",null,"Any intuition of why the drop of exchange rate?"),(0,r.yg)("p",null,"Let's try to swap more:\n",(0,r.yg)("img",{alt:"SwapASH",src:n(6088).A,width:"2970",height:"1506"})),(0,r.yg)("p",null,"Notice that for 100 EGLD, we would get 3798 ASH tokens.\nThat's ",(0,r.yg)("strong",{parentName:"p"},"37.98 ASH")," tokens for 1 EGLD."),(0,r.yg)("h2",{id:"automated-market-maker-amm"},"Automated Market Maker (AMM)"),(0,r.yg)("p",null,"An AMM relies on a mathematical formula to price assets.\nInstead of using an order book like a traditional exchange, assets are priced according to a pricing algorithm."),(0,r.yg)("p",null,'This formula can vary with each protocol.\nFor example, xExchange DEX uses the industry standard "x*y=k" constant product AMM model, which has proven its reliability in existing implementations, and has been formally modelled and verified.\nIn this formula, k is a fixed constant, meaning the pool\u2019s total liquidity always has to remain the same.'),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"AMM",src:n(1e3).A,width:"843",height:"725"})),(0,r.yg)("h2",{id:"pair-smart-contract"},"Pair Smart Contract"),(0,r.yg)("p",null,"The smart contract code can be found ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/multiversx/mx-exchange-sc/tree/main/dex/pair"},"here"),"."),(0,r.yg)("p",null,"Let's inspect the deployed ",(0,r.yg)("a",{parentName:"p",href:"https://devnet-explorer.multiversx.com/accounts/erd1qqqqqqqqqqqqqpgq0e9pmlzr0nk5nkulzcmessttsjkzr4xf0n4sue4r8e/tokens"},"contract"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"AshLPExplorer",src:n(3496).A,width:"2474",height:"1558"})),(0,r.yg)("p",null,"Notice the contract's balance:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"WEGLD: 27.14"),(0,r.yg)("li",{parentName:"ul"},"ASH: 4,817.99"),(0,r.yg)("li",{parentName:"ul"},"ASHWEGLD: 0.000000000000001 - This is the token provided to liquidity providers when they add liquidity. Let's ignore this for now.")),(0,r.yg)("p",null,"Let's try to exchange more ASH than the contract can provide:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"SwapASH",src:n(1255).A,width:"2474",height:"1558"})),(0,r.yg)("p",null,"In this example, we tried to exchange ",(0,r.yg)("strong",{parentName:"p"},"100 millions EGLD"),", but the contract would output ",(0,r.yg)("strong",{parentName:"p"},"4,580.0391 ASH")," tokens.\nThat's because of the curve of ",(0,r.yg)("strong",{parentName:"p"},"x*y=k")," formula (see image above)."),(0,r.yg)("h2",{id:"task"},"Task"),(0,r.yg)("p",null,"Perform a swap. Go to the ",(0,r.yg)("a",{parentName:"p",href:"https://devnet-explorer.multiversx.com"},"Explorer")," and inspect your transaction.\nInspect if there are any evets emitted."))}u.isMDXComponent=!0},3208:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/xexchange-5d55e7e44bdd6bf02630b1589689334d.png"},3496:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/ash_lp_explorer-8f0291c5ab7278d077912022d221c7f7.png"},3953:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/swap_ash2-9fd3572d919b1e2aa996d973c655ee6e.png"},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=c(n),d=r,h=g["".concat(l,".").concat(d)]||g[d]||u[d]||o;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[g]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6088:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/swap_ash3-94fea4692b8d5a5d26f1e58bf0829c81.png"}}]);